Morph subclass: #CrossMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BookMorphic'!!CrossMorph commentStamp: 'ab 2/27/2019 02:11' prior: 0!From Updated Pharo By Example Book!!CrossMorph methodsFor: 'drawing' stamp: 'ab 2/26/2019 23:00'!drawOn: aCanvas	|topAndBottom|	aCanvas fillRectangle: self horizontalBar color: self color.	topAndBottom := self verticalBar areasOutside: self horizontalBar.	topAndBottom do: [ :each | aCanvas fillRectangle: each color: self color ]! !!CrossMorph methodsFor: 'model - stepping' stamp: 'ab 2/27/2019 02:14'!stepTime	^ 100! !!CrossMorph methodsFor: 'model - stepping' stamp: 'ab 2/27/2019 02:12'!step	(self color diff: Color black) < 0.1		ifTrue:[ self color: Color red ]		ifFalse: [ self color: self color darker ]! !!CrossMorph methodsFor: 'geometry testing' stamp: 'ab 2/26/2019 22:11'!containsPoint: aPoint	^ (self horizontalBar containsPoint: aPoint) or: [ self verticalBar containsPoint: aPoint ]! !!CrossMorph methodsFor: 'event handling' stamp: 'ab 2/26/2019 23:02'!mouseEnter: anEvent	anEvent hand newKeyboardFocus: self! !!CrossMorph methodsFor: 'event handling' stamp: 'ab 2/26/2019 22:51'!mouseDown: anEvent	anEvent redButtonPressed		ifTrue: [ self color: Color red ].	anEvent yellowButtonPressed 		ifTrue: [ self color: Color yellow ].	self changed! !!CrossMorph methodsFor: 'event handling' stamp: 'ab 2/26/2019 23:02'!mouseLeave: anEvent	anEvent hand newKeyboardFocus: nil! !!CrossMorph methodsFor: 'event handling' stamp: 'ab 2/27/2019 02:41'!handleKeystroke: anEvent	| keyValue |	keyValue := anEvent keyValue.	keyValue = 30		ifTrue: [ self position: self position - (0 @ 20)].	keyValue = 31		ifTrue: [ self position: self position + (0 @ 20)].	keyValue = 29		ifTrue: [ self position: self position + (20 @ 0)].	keyValue = 28		ifTrue: [ self position: self position - (20 @ 0)].	keyValue = $+ asciiValue		ifTrue: [ self startStepping ].	keyValue = $- asciiValue		ifTrue: [ self stopStepping ]! !!CrossMorph methodsFor: 'event handling' stamp: 'ab 2/26/2019 23:01'!handlesMouseOver: anEvent	^ true! !!CrossMorph methodsFor: 'event handling' stamp: 'ab 2/26/2019 22:48'!handlesMouseDown: anEvent	^ true! !!CrossMorph methodsFor: 'private' stamp: 'ab 2/26/2019 22:29'!verticalBar	| crossWidth |	crossWidth := (self height / 3.0) rounded.	^ self bounds insetBy: crossWidth @ 0! !!CrossMorph methodsFor: 'private' stamp: 'ab 2/26/2019 22:36'!horizontalBar	| crossHeight |	crossHeight := (self height / 3.0) rounded.	^ self bounds insetBy: 0 @ crossHeight! !BorderedMorph subclass: #DieMorph	instanceVariableNames: 'faces dieValue isStopped'	classVariableNames: ''	poolDictionaries: ''	category: 'BookMorphic'!!DieMorph commentStamp: 'ab 2/27/2019 20:54' prior: 0!From Updated Pharo By Example Book!!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:08'!drawDotOn: aCanvas at: aPoint	aCanvas		fillOval: (Rectangle			center: self position + (self extent * aPoint)			extent: self extent / 6)		color: Color black! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:02'!face6	^{0.25@0.25 . 0.75@0.25 . 0.75@0.75 . 0.25@0.75 . 0.25@0.5 .0.75@0.5}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:01'!face3	^{0.25@0.25 . 0.75@0.75 . 0.5@0.5}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:02'!face5	^{0.25@0.25 . 0.75@0.25 . 0.75@0.75 . 0.25@0.75 . 0.5@0.5}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:02'!face4	^{0.25@0.25 . 0.75@0.25 . 0.75@0.75 . 0.25@0.75}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:02'!face7	^{0.25@0.25 . 0.75@0.25 . 0.75@0.75 . 0.25@0.75 . 0.25@0.5 .0.75@0.5 . 0.5@0.5}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:01'!face2	^{0.25@0.25 . 0.75@0.75}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:03'!face8	^{0.25@0.25 . 0.75@0.25 . 0.75@0.75 . 0.25@0.75 . 0.25@0.5 .0.75@0.5 . 0.5@0.5 . 0.5@0.25}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:03'!face9	^{0.25@0.25 . 0.75@0.25 . 0.75@0.75 . 0.25@0.75 . 0.25@0.5 .0.75@0.5 . 0.5@0.5 . 0.5@0.25 . 0.5@0.75}! !!DieMorph methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 21:01'!face1	^ {(0.5 @ 0.5)}! !!DieMorph methodsFor: 'stepping and presenter' stamp: 'ab 2/27/2019 21:23'!step	isStopped ifFalse: [ self dieValue: (1 to: faces) atRandom ]! !!DieMorph methodsFor: 'initialization' stamp: 'ab 2/27/2019 21:28'!initialize	super initialize.	self extent: 50 @ 50.	self		useGradientFill;		borderWidth: 2;		useRoundedCorners.	self setBorderStyle: #complexRaised.	self fillStyle direction: self extent.	self color: Color green.	dieValue := 1.	faces := 6.	isStopped := true! !!DieMorph methodsFor: 'accessing' stamp: 'ab 2/27/2019 20:59'!faces: aNumber	((aNumber isInteger and: [aNumber > 0]) and: [ aNumber <= 9 ])		ifTrue: [ faces := aNumber ]! !!DieMorph methodsFor: 'accessing' stamp: 'ab 2/27/2019 21:11'!dieValue: aNumber	((aNumber isInteger and: [ aNumber > 0 ]) and: [ aNumber <= faces ])		ifTrue: [ 			dieValue := aNumber.			self changed			 ]! !!DieMorph methodsFor: 'event handling' stamp: 'ab 2/27/2019 21:19'!mouseDown: anEvent	anEvent redButtonPressed		ifTrue: [ isStopped := isStopped not ]! !!DieMorph methodsFor: 'event handling' stamp: 'ab 2/27/2019 21:20'!handlesMouseDown: anEvent	^ true! !!DieMorph methodsFor: 'drawing' stamp: 'ab 2/27/2019 21:27'!drawOn: aCanvas	|theCanvas|	theCanvas := aCanvas asAlphaBlendingCanvas: 0.5.	super drawOn: theCanvas.	(self perform: ('face', dieValue asString) asSymbol)		do: [ :aPoint | self drawDotOn: aCanvas at: aPoint ]! !!DieMorph methodsFor: 'model - stepping' stamp: 'ab 2/27/2019 21:18'!stepTime	^ 200! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DieMorph class	instanceVariableNames: ''!!DieMorph class methodsFor: 'as yet unclassified' stamp: 'ab 2/27/2019 20:55'!faces: aNumber	^ self new faces: aNumber! !Morph subclass: #DroppedMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BookMorphic'!!DroppedMorph commentStamp: 'ab 2/27/2019 20:17' prior: 0!From Updated Pharo By Example Book!!DroppedMorph methodsFor: 'initialization' stamp: 'ab 2/27/2019 20:18'!initialize	super initialize.	color := Color blue.	self position: 250 @ 100! !!DroppedMorph methodsFor: 'initialization' stamp: 'ab 2/27/2019 20:44'!rejectDropMorphEvent: anEvent	| h |	h := anEvent hand.	WorldState addDeferredUIMessage: [ h grabMorph: self ].	anEvent wasHandled: true! !Morph subclass: #ReceiverMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BookMorphic'!!ReceiverMorph commentStamp: 'ab 2/27/2019 20:13' prior: 0!From Updated Pharo By Example Book!!ReceiverMorph methodsFor: 'dropping/grabbing' stamp: 'ab 2/27/2019 20:37'!repelsMorph: aMorph event: anEvent	^ (self wantsDroppedMorph: aMorph event: anEvent) not! !!ReceiverMorph methodsFor: 'initialization' stamp: 'ab 2/27/2019 20:14'!initialize	super initialize.	color := Color red..	bounds := 0 @ 0 extent: 200 @ 200! !!ReceiverMorph methodsFor: 'initialization' stamp: 'ab 2/27/2019 20:37'!wantsDroppedMorph: aMorph event: anEvent	^ aMorph color = Color blue! !
