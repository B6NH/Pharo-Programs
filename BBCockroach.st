Object subclass: #CTile	instanceVariableNames: 'location floorArea'	classVariableNames: ''	poolDictionaries: ''	category: 'BBCockroach'!!CTile commentStamp: 'ab 3/16/2019 21:39' prior: 0!Tile from BB Cockroach!!CTile methodsFor: 'accessing' stamp: 'ab 3/16/2019 21:35'!location	^ location! !!CTile methodsFor: 'accessing' stamp: 'ab 3/16/2019 21:38'!hash	^ location hash! !!CTile methodsFor: 'accessing' stamp: 'ab 3/16/2019 21:35'!location: aPoint	location := aPoint! !!CTile methodsFor: 'accessing' stamp: 'ab 3/16/2019 21:38'!= aTile	^ (aTile isKindOf: CTile) and: [ location = aTile location ]! !!CTile methodsFor: 'accessing' stamp: 'ab 3/16/2019 21:38'!neighborAt: deltaPoint	| newTile |	newTile := CTile new floorArea: floorArea.	newTile location: ((location + deltaPoint max: floorArea origin) min: floorArea corner).	^ newTile! !!CTile methodsFor: 'accessing' stamp: 'ab 3/16/2019 21:36'!floorArea: aRectangle	floorArea := aRectangle! !Object subclass: #DrunkenCockroach	instanceVariableNames: 'currentTile tilesVisited'	classVariableNames: 'Directions Rand'	poolDictionaries: ''	category: 'BBCockroach'!!DrunkenCockroach commentStamp: 'ab 3/16/2019 21:48' prior: 0!Cockroach from BB Cockroach!!DrunkenCockroach methodsFor: 'initialization' stamp: 'ab 3/16/2019 21:51'!numberOfSteps	^ tilesVisited size! !!DrunkenCockroach methodsFor: 'initialization' stamp: 'ab 3/17/2019 00:33'!setVariables	currentTile := CTile new.	tilesVisited := Bag new! !!DrunkenCockroach methodsFor: 'initialization' stamp: 'ab 3/16/2019 21:51'!timesSteppedOn: aTile	^ tilesVisited occurrencesOf: aTile! !!DrunkenCockroach methodsFor: 'initialization' stamp: 'ab 3/17/2019 00:43'!walkWithin: aRectangle startingAt: aPoint	| numberTiles |	tilesVisited := Bag new.	currentTile location: aPoint.	currentTile floorArea: aRectangle.	numberTiles := (aRectangle width + 1) * (aRectangle height + 1).	tilesVisited add: currentTile.	[ tilesVisited asSet size < numberTiles ]		whileTrue: [			currentTile  := currentTile neighborAt: 				(Directions at: (Rand next * Directions size) truncated + 1).			tilesVisited add: currentTile			]		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DrunkenCockroach class	instanceVariableNames: ''!!DrunkenCockroach class methodsFor: 'initialization' stamp: 'ab 3/16/2019 21:57'!initialize	Directions := OrderedCollection new: 9.	(-1 to:1) do: [ :x | (-1 to: 1) do: [ :y | Directions add: x@y ] ].	Rand := Random new! !!DrunkenCockroach class methodsFor: 'initialization' stamp: 'ab 3/16/2019 21:50'!new	^ super new setVariables! !TestCase subclass: #DrunkenCockroachTests	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BBCockroach'!!DrunkenCockroachTests commentStamp: 'ab 3/17/2019 01:05' prior: 0!Cockroach Tests!!DrunkenCockroachTests methodsFor: 'tests' stamp: 'ab 3/17/2019 01:10'!testAverageSteps	| results cockroach average |	DrunkenCockroach initialize.	cockroach := DrunkenCockroach new.	results := OrderedCollection new: 50.	50 timesRepeat: [		cockroach walkWithin: (1@1 corner: 3@3) startingAt:  (1@1).		results add: cockroach numberOfSteps		].	average := (results inject: 0 into: [ :sum :steps | sum + steps ])/50! !DrunkenCockroach initialize!
