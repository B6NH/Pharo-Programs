Object subclass: #KANetwork	instanceVariableNames: 'nodes links'	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetwork commentStamp: 'ab 4/30/2019 21:17' prior: 0!Network Class!!KANetwork methodsFor: 'as yet unclassified' stamp: 'ab 4/30/2019 21:18'!makeLinkFrom: aNode to: anotherNode	^ KANetworkLink from: aNode to: anotherNode! !!KANetwork methodsFor: 'as yet unclassified' stamp: 'ab 5/3/2019 01:15'!connect: aNode to: anotherNode	| link1 link2 |	self add: aNode; add: anotherNode.	link1 := self makeLinkFrom: aNode to: anotherNode.	link2 := self makeLinkFrom: anotherNode to: aNode.	links add: link1 attach;add: link2 attach	! !!KANetwork methodsFor: 'as yet unclassified' stamp: 'ab 5/3/2019 01:18'!linkFrom: sourceAddress to: destinationAddress	^ links		detect: [ :link | 			(link source address = sourceAddress) and: [ link destination address = destinationAddress ]]		ifNone: [ NotFound signalFor: sourceAddress in: self ]! !!KANetwork methodsFor: 'as yet unclassified' stamp: 'ab 4/30/2019 21:19'!doesRecordNode: aNode	^ nodes includes: aNode! !!KANetwork methodsFor: 'adding' stamp: 'ab 4/30/2019 21:19'!add: aNode	nodes add: aNode! !!KANetwork methodsFor: 'initialization' stamp: 'ab 4/30/2019 21:18'!initialize	nodes := Set new.	links := Set new! !!KANetwork methodsFor: 'accessing' stamp: 'ab 4/30/2019 21:43'!nodeAt: anAddress	^ self		nodeAt: anAddress		ifNone: [ NotFound signalFor: anAddress in: self ]! !!KANetwork methodsFor: 'accessing' stamp: 'ab 4/30/2019 21:37'!nodeAt: anAddress ifNone: noneBlock	^ nodes detect: [ :aNode | anAddress = aNode address ] ifNone: noneBlock! !Object subclass: #KANetworkLink	instanceVariableNames: 'source destination packetsToTransmit'	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkLink commentStamp: 'ab 4/27/2019 00:07' prior: 0!Network Link Class!!KANetworkLink methodsFor: 'printing' stamp: 'ab 4/28/2019 22:28'!printOn: aStream	aStream nextPutAll: 'Link'.	source		ifNotNil: [ aStream			nextPutAll: ' ';			nextPutAll: source address ].	destination		ifNotNil: [ aStream			nextPutAll: ' -> ';			nextPutAll: destination address ]! !!KANetworkLink methodsFor: 'testing' stamp: 'ab 4/28/2019 22:41'!isTransmitting: aPacket	^ packetsToTransmit includes: aPacket! !!KANetworkLink methodsFor: 'as yet unclassified' stamp: 'ab 4/30/2019 02:54'!transmit: aPacket	(self isTransmitting: aPacket)		ifTrue: [ 			packetsToTransmit remove: aPacket.			destination receive: aPacket from: self			]		! !!KANetworkLink methodsFor: 'as yet unclassified' stamp: 'ab 4/27/2019 00:10'!attach	source attach: self! !!KANetworkLink methodsFor: 'as yet unclassified' stamp: 'ab 4/28/2019 22:40'!emit: aPacket	packetsToTransmit add: aPacket! !!KANetworkLink methodsFor: 'initialization' stamp: 'ab 4/27/2019 00:09'!initializeFrom: sourceNode to: destinationNode	source := sourceNode.	destination := destinationNode! !!KANetworkLink methodsFor: 'initialization' stamp: 'ab 4/27/2019 00:09'!source	^ source! !!KANetworkLink methodsFor: 'initialization' stamp: 'ab 4/27/2019 00:09'!destination	^ destination! !!KANetworkLink methodsFor: 'initialization' stamp: 'ab 4/28/2019 22:39'!initialize	packetsToTransmit := OrderedCollection new! !!KANetworkLink methodsFor: 'accessing' stamp: 'ab 5/6/2019 23:35'!packetsToTransmit	^ packetsToTransmit! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!KANetworkLink class	instanceVariableNames: ''!!KANetworkLink class methodsFor: 'instance creation' stamp: 'ab 4/27/2019 00:08'!from: sourceNode to: destinationNode	^ self new initializeFrom: sourceNode to: destinationNode! !Object subclass: #KANetworkNode	instanceVariableNames: 'address outgoingLinks arrivedPackets loopback'	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkNode commentStamp: 'ab 4/27/2019 00:01' prior: 0!Network Node Class!!KANetworkNode methodsFor: 'utilities' stamp: 'ab 4/27/2019 00:11'!attach: anOutgoingLink	outgoingLinks add: anOutgoingLink! !!KANetworkNode methodsFor: 'accessing' stamp: 'ab 4/30/2019 03:09'!loopback	^ loopback! !!KANetworkNode methodsFor: 'accessing' stamp: 'ab 4/27/2019 00:02'!address	^ address! !!KANetworkNode methodsFor: 'initialization' stamp: 'ab 4/30/2019 21:16'!initialize	outgoingLinks := Set new.	arrivedPackets := OrderedCollection new.	loopback := KANetworkLink from: self to: self! !!KANetworkNode methodsFor: 'initialization' stamp: 'ab 4/27/2019 00:02'!initializeAddress: aNetworkAddress	address := aNetworkAddress! !!KANetworkNode methodsFor: 'as yet unclassified' stamp: 'ab 4/30/2019 02:47'!consume: aPacket	"Default handling is to do nothing"! !!KANetworkNode methodsFor: 'as yet unclassified' stamp: 'ab 5/4/2019 02:41'!receive: aPacket from: aLink	aPacket destinationAddress = address		ifTrue: [ 			self consume: aPacket.			arrivedPackets add: aPacket 			 ]		ifFalse: [ self forward: aPacket from: aLink ]! !!KANetworkNode methodsFor: 'as yet unclassified' stamp: 'ab 4/30/2019 03:19'!linksTowards: anAddress do: aBlock	anAddress = self address		ifTrue: [ aBlock value: loopback ]		ifFalse: [ outgoingLinks do: aBlock ]! !!KANetworkNode methodsFor: 'as yet unclassified' stamp: 'ab 5/4/2019 02:42'!forward: aPacket from: arrivalLink	"Do nothing. Normal nodes do not route packets. "! !!KANetworkNode methodsFor: 'as yet unclassified' stamp: 'ab 4/30/2019 03:24'!send: aPacket via: aLink	aLink emit: aPacket	! !!KANetworkNode methodsFor: 'testing' stamp: 'ab 4/30/2019 02:51'!hasReceived: aPacket	^ arrivedPackets includes: aPacket! !!KANetworkNode methodsFor: 'testing' stamp: 'ab 4/27/2019 00:14'!hasLinkTo: anotherNode	^ outgoingLinks anySatisfy: [ :each |  each destination = anotherNode ]! !!KANetworkNode methodsFor: 'instructions' stamp: 'ab 4/30/2019 03:19'!send: aPacket	self linksTowards: aPacket destinationAddress		do: [ :link | self send: aPacket via: link ]! !!KANetworkNode methodsFor: 'printing' stamp: 'ab 4/28/2019 22:25'!printOn: aStream	aStream nextPutAll: 'Node ('.	aStream nextPutAll: address , ')'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!KANetworkNode class	instanceVariableNames: ''!!KANetworkNode class methodsFor: 'as yet unclassified' stamp: 'ab 4/27/2019 00:01'!withAddress: aNetworkAddress	^ self new initializeAddress: aNetworkAddress; yourself! !KANetworkNode subclass: #KANetworkHub	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkHub commentStamp: 'ab 5/4/2019 02:46' prior: 0!Network Hub Class!!KANetworkHub methodsFor: 'as yet unclassified' stamp: 'ab 5/4/2019 02:53'!forward: aPacket from: arrivalLink	self linksTowards: aPacket destinationAddress do: [ :link | 		link = arrivalLink			ifFalse: [ self send: aPacket via: link ]		]! !Object subclass: #KANetworkPacket	instanceVariableNames: 'sourceAddress destinationAddress payload'	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkPacket commentStamp: 'ab 4/25/2019 00:39' prior: 0!Network Packet Class!!KANetworkPacket methodsFor: 'initialization' stamp: 'ab 4/25/2019 00:42'!initializeSource: source destination: destination payload: anObject	sourceAddress := source.	destinationAddress := destination.	payload := anObject! !!KANetworkPacket methodsFor: 'accessing' stamp: 'ab 4/25/2019 00:44'!sourceAddress	^ sourceAddress! !!KANetworkPacket methodsFor: 'accessing' stamp: 'ab 4/25/2019 00:45'!destinationAddress	^ destinationAddress! !!KANetworkPacket methodsFor: 'accessing' stamp: 'ab 4/25/2019 00:45'!payload	^ payload! !!KANetworkPacket methodsFor: 'testing' stamp: 'ab 5/3/2019 01:27'!isOriginatingFrom: aNode	^ sourceAddress = aNode address! !!KANetworkPacket methodsFor: 'testing' stamp: 'ab 5/3/2019 01:26'!isAddressedTo: aNode	^ destinationAddress = aNode address! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!KANetworkPacket class	instanceVariableNames: ''!!KANetworkPacket class methodsFor: 'instance creation' stamp: 'ab 4/25/2019 00:44'!from: sourceAddress to: destinationAddress payload: anObject	| packet |	packet := self new initializeSource: sourceAddress destination: destinationAddress payload: anObject.	^ packet! !KANetworkNode subclass: #KANetworkPrinter	instanceVariableNames: 'supply tray'	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkPrinter commentStamp: 'ab 5/5/2019 21:17' prior: 0!Network Printer Class!!KANetworkPrinter methodsFor: 'accessing' stamp: 'ab 5/5/2019 22:02'!tray	^ tray! !!KANetworkPrinter methodsFor: 'accessing' stamp: 'ab 5/5/2019 22:02'!supply	^ supply! !!KANetworkPrinter methodsFor: 'as yet unclassified' stamp: 'ab 5/5/2019 22:04'!consume: aPacket	supply = 0 ifTrue: [ ^ self "no paper, do nothing" ].		supply := supply - 1.	tray add: aPacket payload! !!KANetworkPrinter methodsFor: 'as yet unclassified' stamp: 'ab 5/5/2019 21:21'!resupply: paperSheets	supply := supply + paperSheets! !!KANetworkPrinter methodsFor: 'initialization' stamp: 'ab 5/5/2019 21:21'!initialize	super initialize.	supply := 0.	tray := OrderedCollection new! !!KANetworkPrinter methodsFor: 'printing' stamp: 'ab 5/5/2019 22:18'!printOn: aStream	aStream		nextPutAll: 'Printer (';		nextPutAll: address;		nextPutAll: ', ' ;		nextPutAll: self supply asString , ')'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!KANetworkPrinter class	instanceVariableNames: ''!!KANetworkPrinter class methodsFor: 'as yet unclassified' stamp: 'ab 5/5/2019 21:23'!withAddress: anAddress initialSupply: paperSheets	^ (self withAddress: anAddress) resupply: paperSheets; yourself! !KANetworkNode subclass: #KANetworkServer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkServer commentStamp: 'ab 5/5/2019 21:24' prior: 0!Network Server Class!!KANetworkServer methodsFor: 'as yet unclassified' stamp: 'ab 5/5/2019 21:27'!consume: aPacket	| response |	response := aPacket payload asUppercase.	self send: (KANetworkPacket		from: self address		to: aPacket sourceAddress		payload: response)! !KANetworkNode subclass: #KANetworkWorkstation	instanceVariableNames: 'receivedCount'	classVariableNames: ''	poolDictionaries: ''	category: 'NetworkSimulator-Core'!!KANetworkWorkstation commentStamp: 'ab 5/5/2019 21:15' prior: 0!Network Workstation Class!!KANetworkWorkstation methodsFor: 'accessing' stamp: 'ab 5/5/2019 21:29'!receivedCount	^ receivedCount! !!KANetworkWorkstation methodsFor: 'printing' stamp: 'ab 5/5/2019 21:58'!printOn: aStream	aStream		nextPutAll: 'Workstation (';		nextPutAll: address;		nextPutAll: ', ' ;		nextPutAll: self receivedCount asString , ')'! !!KANetworkWorkstation methodsFor: 'initialization' stamp: 'ab 5/5/2019 21:15'!initialize	super initialize.	receivedCount := 0! !!KANetworkWorkstation methodsFor: 'initialization' stamp: 'ab 5/5/2019 21:16'!consume: aPacket	receivedCount := receivedCount + 1! !
